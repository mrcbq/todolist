/**
* @jest-environment jsdom
*/
const jsdom = require('jsdom');

const { JSDOM } = jsdom;
import 'jest-localstorage-mock';
import renderTasks from './index.js';
import tasksObj from './tasks.js';
import { filterTasks } from './methods.js';
// import 'jsdom-global/register';
// import FastTextEncoding from 'fast-text-encoding';
// global.TextEncoder = FastTextEncoding.TextEncoder;
// import { TextEncoder } from 'util';
// import { setup } from 'jsdom-global';
// setup();
// global.TextEncoder = TextEncoder;

const dom = new JSDOM('<!doctype html><html><body></body></html>');
global.window = dom.window;
global.document = window.document;

// const tasksContainer = document.createElement('ul');
// tasksContainer.id = 'tasks-container';
// document.body.appendChild(tasksContainer);

// const clearBtn = document.createElement('button');
// clearBtn.id = 'clear-btn';
// clearBtn.type = 'button';
// document.body.appendChild(clearBtn);

// clearBtn.addEventListener('click', () => {
//   filterTasks();
//   renderTasks();
// });

beforeEach(() => {
  document.body.innerHTML = `
  <h1 title="Demo">To-Do List</h1>

  <div id="todo-container">
    <form>
      <input type="text" value="Today's To Do">
      <input class="input-btn-ccw" type="button" tabindex="-1" value="">
    </form>

    <form id="form-input" action="#">
      <input id="input-list" placeholder="Add to your list..." type="text">
      <input class="input-sbt-enter" type="submit" tabindex="-1" value="" title="click this or press enter to submit">
    </form>

    <ul id="tasks-container">
      <!-- lists generated by js -->
    </ul>

    <button id="clear-btn" type="button">Clear all completed</button>
  </div>
  `;
});

afterEach(() => {
  jest.restoreAllMocks();
});

// Tests that renderTasks function renders all tasks in the tasks array.
it('test_render_tasks_renders_all_tasks', () => {
  // Arrange
  const tasks = [
    { id: 1, description: 'Task 1', completed: false },
    { id: 2, description: 'Task 2', completed: true },
    { id: 3, description: 'Task 3', completed: false },
  ];
  tasksObj.setTasks(tasks);
  const expectedHTML =
    '<li><input type="checkbox" tabindex="0" alt="Check!"><input maxlength="255" value="Task 1"><input type="button" tabindex="-1" value="" title="click and sostain for rearrange" class="input-btn-dots"></li><li><input type="checkbox" tabindex="0" alt="Check!" checked=""><input maxlength="255" value="Task 2"><input type="button" tabindex="-1" value="" title="click and sostain for rearrange" class="input-btn-dots"></li><li><input type="checkbox" tabindex="0" alt="Check!"><input maxlength="255" value="Task 3"><input type="button" tabindex="-1" value="" title="click and sostain for rearrange" class="input-btn-dots"></li>';

  // Act
  renderTasks();
  const actualHTML = tasksContainer.innerHTML;

  // Assert
  expect(actualHTML).toEqual(expectedHTML);
});
